{% set command_name = 'Delete' + file.class_name + 'Command' %}
{% set command_handler = command_name + 'Handler' %}
using System.Threading;
using System.Threading.Tasks;
using {{ mediator_lib }};
using {{ file.solution_name }}.Application.Common.Interfaces;
using {{ file.solution_name }}.Application.Common.Extensions;
using {{ file.solution_name }}.Application.Common.Exceptions;
using {{ file.namespace.name }};

namespace {{ target_namespace }};

/// <summary>
/// Команда удаления сущности "{{ file.class_summary }}"
/// </summary>
public class {{ command_name }} : IRequest
{
    /// <summary>
    /// Идентификатор
    /// </summary>
    public long Id { get; set; }
}

public class {{ command_handler }} : IRequestHandler<{{ command_name }}>
{
    private readonly IApplicationDbContext _context;

    public {{ command_handler }}(IApplicationDbContext context)
    {
        _context = context;
    }

    public async {{ return_value }}<Unit> Handle({{ command_name }} request, CancellationToken cancellationToken)
    {
        var entity = await _context.{{ file.pluralized_class_name }}
            .FindByIdAsync(request.Id, cancellationToken);

        if (entity is null)
            throw new NotFoundException(nameof({{ file.class_name }}), request.Id);

        _context.{{ file.pluralized_class_name }}.Remove(entity);

        await _context.SaveChangesAsync(cancellationToken);

        return Unit.Value;
    }
}